@model VisualizeFilterModel
@{
    ViewData[ViewKeys.Title] = "Time Series Visualizer - Venjix";
    ViewData[ViewKeys.PageHeading] = "Time Series Visualizer";
    ViewData[ViewKeys.PageSubheading] = "View time Series data in line chart.";
}

<h1 class="h3 mb-2 text-gray-800">
    @ViewData[ViewKeys.PageHeading]
    <a tabindex="0" class="btn btn-link" data-container="body" data-toggle="popover" data-trigger="focus" data-placement="right" data-content="@ViewData[ViewKeys.PageSubheading]">
        <i class="fas fa-info"></i>
    </a>
</h1>

<div class="card shadow mb-4">
    <div class="card-body">
        <form>
            <div class="form-group">
                <label asp-for="SensorId">Sensor</label>
                <div class="form-row">
                    <div class="col-5">
                        <select class="form-control" asp-for="SensorId" asp-items="Model.Sensors"></select>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label asp-for="StartDate">Date Range</label>
                <div class="form-row">
                    <div class="col-6">
                        <input type="datetime-local" class="form-control" asp-for="StartDate" step="1">
                    </div>
                    <div class="col-6">
                        <input type="datetime-local" class="form-control" asp-for="EndDate" step="1">
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label asp-for="UpdateInterval">Auto Update</label>
                <div class="form-row">
                    <div class="col-5">
                        <select class="form-control" asp-for="UpdateInterval" asp-items="Model.UpdateIntervals"></select>
                    </div>
                    <div class="col-1">
                        <a tabindex="0" class="btn btn-link" data-container="body" data-toggle="popover" data-trigger="focus" data-placement="right" 
                           data-content="This auto update respect all the filter above. Make sure to extend the End Date to a time in the future">
                            <i class="fas fa-info"></i>
                        </a>
                    </div>
                </div>
                
            </div>

            <button type="button" class="btn btn-primary btn-icon-split" id="showButton">
                <span class="icon text-white-50">
                    <i class="fas fa-eye"></i>
                </span>
                <span class="text">Show</span>
            </button>
        </form>

        <div class="mt-4">
            <div id="chart"></div>
        </div>
    </div>
</div>

@section Styles {
    <link href="~/lib/Chart.js/Chart.min.css" rel="stylesheet">
}

@section Scripts {
    <script src="~/lib/moment.js/moment.min.js"></script>
    <script src="~/lib/apexcharts/apexcharts.min.js"></script>
    <script>
        var data = [];
        var options = {
            series: [{
                name: $('#SensorId option:selected').text(),
                data: data.slice()
            }],
            chart: {
                id: 'realtime',
                height: 350,
                type: 'line'
            },
            dataLabels: {
                enabled: false
            },
            xaxis: {
                type: 'datetime',
                tooltip: {
                    enabled: false
                }
            },
            legend: {
                show: false
            },
            markers: {
                size: 4
            },
            tooltip: {
                x: {
                    formatter: function (value, { series, seriesIndex, dataPointIndex, w }) {
                        return moment(value).format("DD/MM/YYYY hh:mm:ss");
                    }
                }
            }
        };

        var chart = new ApexCharts(document.querySelector("#chart"), options);
        chart.render();

        var interval = null;

        $("#showButton").on("click", function (e) {
            e.preventDefault();
            fetch_new_data();
        });

        $('#UpdateInterval').on("change", function () {
            if (interval !== null) {
                clearInterval(interval);
            }

            var selectedInterval = parseInt(this.value);
            if (selectedInterval == 0) return;

            interval = window.setInterval(function () {
                fetch_new_data();
            }, selectedInterval * 1000);
        });

        function fetch_new_data() {
            d = {
                sensorId: $('#SensorId option:selected').val(),
                startDate: $('#StartDate').val(),
                endDate: $('#EndDate').val()
            };

            $.ajax({
                type: "POST",
                url: "@Url.Action("TimeSeriesData")",
                data: JSON.stringify(d),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    data = response;
                    chart.updateSeries([{
                        name: $('#SensorId option:selected').text(),
                        data: response
                    }])
                }
            });
        }
    </script>
}